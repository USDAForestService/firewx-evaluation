#############  COMPUTE FIRE BEHAVIOR - behave

### Start with ASOS data
 ## Set Working Directory
 setwd("/media/wpage/Elements/Page/NDFD_Project/Weather/ASOS")
 
 ## Read-in data
 asos.data = read.csv("asos_final2.csv",stringsAsFactors=FALSE)
 asos.data$X = NULL
 asos.data$X100hrfm = as.numeric(asos.data$X100hrfm)

 ## Create input file to read into behave-cli
 run = cbind(asos.data$station_id,asos.data$datetime,asos.data$data_type,asos.data$FM40,(asos.data$X1hrfm*100),(asos.data$X10hrfm*100),(asos.data$X100hrfm*100),(asos.data$LiveHerb_frac_percent*100),(asos.data$LiveWood_frac_percent*100),asos.data$wind_speedMid_mps,asos.data$wind_direction_deg,asos.data$slope_deg,asos.data$asp_deg)

 ## Save input file
 setwd("/home/wpage/Documents/behave/build")  
 filename = paste("behave","_asos_input",".txt",sep="")
 write.table(run,file=filename,sep=",",col.names=FALSE,row.names=FALSE,quote=FALSE)

 ## Read in output & fix colnames
 setwd("/media/wpage/Elements/Page/NDFD_Project/Weather/ASOS/behave")
 behave.data = read.csv("asos_output.csv",stringsAsFactors=FALSE)
 colnames(behave.data)[1] = "station_id"
 colnames(behave.data)[2] = "datetime"
 colnames(behave.data)[3] = "data_type"
 colnames(behave.data)[4] = "ROS_mps"
 colnames(behave.data)[5] = "flame_length_m"

 ## Merge output with data
 library(RSQLite)
 db = dbConnect(SQLite(),dbname="asos_final.sqlite")
 dbWriteTable(db,"asos_data",asos.data,row.names=FALSE) 
 dbWriteTable(db,"behave_data",behave.data,row.names=FALSE)
 merge.asos = dbGetQuery(db,"SELECT * FROM asos_data JOIN behave_data USING (station_id, datetime, data_type)")
 dbDisconnect(db)

 ## Save output
 setwd("/media/wpage/Elements/Page/NDFD_Project/Weather/ASOS")
 write.csv(merge.asos,file="asos_final3.csv",row.names=FALSE)


### Work with RAWS data
 ## Set Working Directory
 setwd("/media/wpage/Elements/Page/NDFD_Project/Weather/RAWS")
 
 ## Read-in data
 raws.data = read.csv("raws_final2.csv",stringsAsFactors=FALSE)
 raws.data$X = NULL
 raws.data$X100hrfm = as.numeric(raws.data$X100hrfm)
 raws.data$wind_direction_deg = replace(raws.data$wind_direction_deg,grep(TRUE,is.na(raws.data$wind_direction_deg)),0)

 x10 = grep(TRUE,is.na(raws.data$X10hrfm))
 x10fix = x10 - 1
 rep1 = raws.data$X10hr[x10fix]

 x100 = grep(TRUE,is.na(raws.data$X100hrfm))
 x100fix = x100 - 1
 rep2 = raws.data$X100hr[x100fix]
 rep2

 raws.data$X10hrfm = replace(raws.data$X10hrfm,x10,rep1) 
 raws.data$X100hrfm = replace(raws.data$X100hrfm,x100,rep2)

 ## Create input file to read into behave-cli
 run = cbind(raws.data$station_id,raws.data$datetime,raws.data$data_type,raws.data$FM40,(raws.data$X1hrfm*100),(raws.data$X10hrfm*100),(raws.data$X100hrfm*100),(raws.data$LiveHerb_frac_percent*100),(raws.data$LiveWood_frac_percent*100),raws.data$wind_speedMid_mps,raws.data$wind_direction_deg,raws.data$slope_deg,raws.data$asp_deg)

 ## Save input file
 setwd("/home/wpage/Documents/behave/build")  
 filename = paste("behave","_raws_input",".txt",sep="")
 write.table(run,file=filename,sep=",",col.names=FALSE,row.names=FALSE,quote=FALSE)

rm(run)
gc()
 ## Read in output & fix colnames
 setwd("/media/wpage/Elements/Page/NDFD_Project/Weather/RAWS/behave")
 behave.data = read.csv("raws_output.csv",stringsAsFactors=FALSE)
 colnames(behave.data)[1] = "station_id"
 colnames(behave.data)[2] = "datetime"
 colnames(behave.data)[3] = "data_type"
 colnames(behave.data)[4] = "ROS_mps"
 colnames(behave.data)[5] = "flame_length_m"

 ## Merge output with data
 library(RSQLite)
 db = dbConnect(SQLite(),dbname="raws_final.sqlite")
 dbWriteTable(db,"raws_data",raws.data,row.names=FALSE) 
 dbWriteTable(db,"behave_data",behave.data,row.names=FALSE)
 merge.raws = dbGetQuery(db,"SELECT * FROM raws_data JOIN behave_data USING (station_id, datetime, data_type)")
 dbDisconnect(db)
 
rm(raws.data,x10,x10fix,rep1,x100,x100fix,rep2,behave.data)
gc()

 ## Save output
 setwd("/media/wpage/Elements/Page/NDFD_Project/Weather/RAWS")
 write.csv(merge.raws,file="raws_final3.csv",row.names=FALSE)
 



## Create input files to read into behave-cli
 setwd("/home/wpage/Documents/behave/build") 
 begin = seq(1,nrow(asos.data),by=100000)
 end = c(seq(100000,nrow(asos.data),by=100000),nrow(asos.data))
 
 for(i in 1:length(begin)) {
   start = begin[i]
   stop = as.integer(end[i])
   temp = cbind(asos.data$station_id[start:stop],asos.data$datetime[start:stop], 
   asos.data$data_type[start:stop],asos.data$FM40[start:stop],((asos.data$X1hrfm[start:stop])*100), 
   ((asos.data$X10hrfm[start:stop])*100),((asos.data$X100hrfm[start:stop])*100),
   ((asos.data$LiveHerb_frac_percent[start:stop])*100),
   ((asos.data$LiveWood_frac_percent[start:stop])*100),
   asos.data$wind_speedMid_mps[start:stop],asos.data$wind_direction_deg[start:stop],
   asos.data$slope_deg[start:stop],asos.data$asp_deg[start:stop])

  filename = paste("behave",i,"_asos_input",".txt",sep="")
  write.table(run,file=filename,sep=",",col.names=FALSE,row.names=FALSE,quote=FALSE) }

 ## Run input files
 input.files = vector()
 output.files = vector()
 changedir = "cd /home/wpage/Documents/behave/build && "

 for(i in 1:length(begin)) { input.files[i] = paste("behave",i,"_asos_input",".txt",sep="") 
 output.files[i] = paste("behave",i,"_asos_output",".txt",sep="")}
 
 for(i in 1:length(input.files)) {
  cmd = paste(changedir,"./behave-raws-batch ","--input-file-name ",input.files[i],
  " --output-file-name ",output.files[i],sep="")
  # Run the program
  run = system(cmd) } 
 









 ## Create function
 behave = function(fuelmodel,X1hr,X10hr,X100hr,liveHerb,liveWood,windspeed, winddirection,slope,aspect) {
  
 # Fix input parameters
  new.wind.mph = windspeed * 2.23694
  new.aspect = ifelse(-1,0,aspect)
  n.X1hr = X1hr * 100
  n.X10hr = X10hr * 100
  n.X100hr = X100hr *100
  n.liveHerb = liveHerb * 100
  n.liveWood = liveWood * 100

  # Build call
  changedir = "cd /home/wpage/Documents/behave/build && "
  cmd = paste(changedir,"./behave-cli ","--fuel-model-number ",fuelmodel," --1hr ", n.X1hr," --10hr ",n.X10hr," --100hr ",n.X100hr," --live-herb ",n.liveHerb," --live-woody ",n.liveWood," --wind-speed ",new.wind.mph," --wind-direction ",winddirection," --slope ",slope," --aspect ",new.aspect," --metric ",sep="")
  # Run the program
  run = system(behave,intern=TRUE)
  return(run)  }

behave(asos.data$FM40[1],asos.data$X1hrfm[1],asos.data$X10hrfm[1],asos.data$X100hrfm[1],asos.data$LiveHerb_frac_percent[1],asos.data$LiveWood_frac_percent[1],asos.data$wind_speedMid_mps[1],asos.data$wind_direction_deg[1],asos.data$slope_deg[1],asos.data$asp_deg[1])

fuelmodel = 165
n.X1hr = 2
n.X10hr = 3
n.X100hr = 4
n.liveHerb = 60
n.liveWood = 60
new.wind.mph = 5
winddirection = 180
slope = 0
new.aspect = 180
run = system(cmd,intern=TRUE)

test = cbind(asos.data$station_id,asos.data$datetime[1:10000],asos.data$data_type[1:10000],asos.data$FM40[1:10000],(asos.data$X1hrfm[1:10000])*100,(asos.data$X10hrfm[1:10000])*100,(asos.data$X100hrfm[1:10000])*100,(asos.data$LiveHerb_frac_percent[1:10000])*100,(asos.data$LiveWood_frac_percent[1:10000])*100,asos.data$wind_speedMid_mps[1:10000],asos.data$wind_direction_deg[1:10000],asos.data$slope_deg[1:10000],asos.data$asp_deg[1:10000])

test[,8]=30
  # Save output
  filename = paste("behave","_asos_input",".txt",sep="")
  X = data.frame()
  write.table(test,file=filename,sep=",",col.names=FALSE,
row.names=FALSE,quote=FALSE)
  write.table(X,file=filename.out,sep=" ",col.names=FALSE,row.names=FALSE) }
  

nrow(asos.data)
n.pos=vector()
for(i in 1:length(pos)) { n.pos[i] = pos[i]-1 }

for(i in 1:length(n.pos)) { asos.data$wind_speedMid_mps[n.pos[i]] = NA }
asos.data$wind_speedMid_mps = replace(asos.data$wind_speedMid_mps,n.pos,NA)

pos = grep(TRUE,is.na(asos.data$wind_speedMid_mps))

pos = is.na(asos.data$wind_speedMid_mps)
asos.data = asos.data[!pos,]

